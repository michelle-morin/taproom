{"version":3,"sources":["components/Header.js","components/NewKegForm.js","components/Keg.js","components/TapList.js","components/BeerImage.js","components/KegDetail.js","components/TapControl.js","components/Footer.js","components/App.js","serviceWorker.js","index.js","assets/beer.jpg"],"names":["Header","Fragment","style","position","top","left","width","height","display","alignItems","justifyContent","flexWrap","borderBottom","backgroundColor","color","fontSize","fontFamily","NewKegForm","props","marginTop","onSubmit","event","preventDefault","onNewKegCreation","name","target","value","brewery","alcoholContent","ibu","price","pintQuantity","id","v4","type","placeholder","required","className","Keg","quantity","textAlign","border","padding","margin","onClick","whenBuyClicked","whenKegClicked","TapList","tapList","map","keg","onClickingBuy","onKegSelection","key","BeerImage","src","beer","alt","KegDetail","onClickingDelete","isDeletable","tapControlStyles","marginLeft","marginRight","marginBottom","TapControl","handleClick","state","selectedKeg","setState","formVisibleOnPage","prevState","handleAddingNewKegToList","newKeg","newMasterKegList","masterKegList","concat","handleChangingSelectedKeg","filter","handleKegPurchase","kegToBePurchased","newPintQuantity","updatedKeg","previousKegList","handleDeletingKeg","currentlyVisibleState","buttonText","this","React","Component","Footer","bottom","borderTop","paddingLeft","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.c743421d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n  const headerStyles = {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    width: '100vw',\n    height: '20vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    borderBottom: '3px solid #388087',\n    backgroundColor: 'rgb(198,229,214)',\n    color:  '#388087',\n    fontSize: '2rem',\n    fontFamily: \"'Oswald', sans-serif\"\n  }\n\n  return (\n    <React.Fragment>\n      <div style={headerStyles}>\n        <h1>REACT ON TAP</h1>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nfunction NewKegForm(props) {\n\n  function handleNewKegFormSubmission(event){\n    event.preventDefault();\n    props.onNewKegCreation({name: event.target.name.value, brewery: event.target.brewery.value, alcoholContent: event.target.alcoholContent.value, ibu: event.target.ibu.value, price: event.target.price.value, pintQuantity: 124, id: v4()});\n  }\n\n  const newKegFormStyles = {\n    marginTop: '2%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap'\n  }\n\n  return (\n    <React.Fragment>\n      <div style={newKegFormStyles}>\n        <form onSubmit={handleNewKegFormSubmission}>\n          <input\n            type='text'\n            name='name'\n            placeholder='brew name' required/>\n          <input\n            type='text'\n            name='brewery'\n            placeholder='brewery name' required/>\n          <input\n            type='number'\n            name='alcoholContent'\n            placeholder='ABV' required/>\n          <input\n            type='number'\n            name='ibu'\n            placeholder='IBU' required/>\n          <input\n            type='number'\n            name='price'\n            placeholder='price' required/>\n          <button className=\"new-keg-button\" type=\"submit\">ADD KEG</button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}\n\nNewKegForm.propTypes = {\n  onNewKegCreation: PropTypes.func\n}\n\nexport default NewKegForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Keg(props) {\n\n  function inStock(quantity) {\n    return quantity > 10 ? <button className=\"buy-button\" onClick={() => props.whenBuyClicked(props.id)}>BUY</button>\n    : quantity <= 10 && quantity > 0 ? <button className=\"buy-button almost-gone\" onClick={() => props.whenBuyClicked(props.id)}>BUY(ALMOST GONE!)</button>\n    : <p className=\"empty-keg\">keg is empty!</p>\n  };\n\n  const kegStyles = {\n    textAlign: 'center',\n    border: '2px solid #388087',\n    width: '300px',\n    height: '300px',\n    padding: '1%',\n    margin: '1%'\n  };\n\n  return(\n    <React.Fragment>\n      <div style={kegStyles} id={props.id}>\n        <h2 className=\"beer-name\">{props.name}</h2>\n        <p>{props.brewery}</p>\n        <p>ABV: {props.alcoholContent}% | IBU: {props.ibu}</p>\n        <p>${props.price} per pint</p>\n        {inStock(props.pintQuantity)}\n        <button className=\"details-button\" onClick = {()=> props.whenKegClicked(props.id)}>DETAILS</button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nKeg.propTypes = {\n  name: PropTypes.string,\n  brewery: PropTypes.string,\n  alcoholContent: PropTypes.number,\n  ibu: PropTypes.number,\n  price: PropTypes.number,\n  pintQuantity: PropTypes.number,\n  id: PropTypes.string,\n  whenKegClicked: PropTypes.func,\n  whenBuyClicked: PropTypes.func\n}\n\nexport default Keg;","import React from 'react';\nimport Keg from './Keg';\nimport PropTypes from 'prop-types';\n\nfunction TapList(props){\n\n  const tapListStyles = {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'flex-start',\n    flexWrap: 'wrap'\n  }\n\n  return(\n    <React.Fragment>\n      <div style={tapListStyles}>\n        {props.tapList.map((keg) =>\n        <Keg \n          whenBuyClicked = {props.onClickingBuy}\n          whenKegClicked = {props.onKegSelection}\n          name={keg.name}\n          brewery={keg.brewery}\n          alcoholContent={keg.alcoholContent}\n          ibu={keg.ibu}\n          price={keg.price}\n          pintQuantity={keg.pintQuantity}\n          id={keg.id}\n          key={keg.id} />\n        )}\n      </div>\n    </React.Fragment>\n  );\n}\n\nTapList.propTypes = {\n  tapList: PropTypes.array,\n  onKegSelection: PropTypes.func,\n  onClickingBuy: PropTypes.func\n}\n\nexport default TapList;","import React from 'react';\nimport beer from '../assets/beer.jpg';\n\nfunction BeerImage(){\n  return (\n    <div>\n      <img className=\"beer-image\" src={beer} alt=\"illustration of hand holding a beer\"/>\n    </div>\n  );\n}\n\nexport default BeerImage;","import React from \"react\";\nimport BeerImage from './BeerImage';\nimport PropTypes from 'prop-types';\n\nfunction KegDetail(props){\n  const { keg, onClickingDelete } = props;\n\n  const kegDetailStyles = {\n    marginTop: '2%',\n    textAlign: 'center'\n  }\n\n  function isDeletable(quantity) {\n    if (quantity <= 0) {\n      return <button className=\"delete-button\" onClick={()=> onClickingDelete(keg.id)}>DELETE KEG</button>\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div style={kegDetailStyles}>\n        <h1>{keg.name}</h1>\n        <p>Brewed by: {keg.brewery}</p>\n        <p>ABV: {keg.alcoholContent}% | IBU: {keg.ibu}</p>\n        <p>${keg.price} per pint</p>\n        <p>pints in keg: {keg.pintQuantity}</p>\n        {isDeletable(keg.pintQuantity)}\n        <BeerImage />\n      </div>\n    </React.Fragment>\n  );\n}\n\nKegDetail.propTypes = {\n  keg: PropTypes.object,\n  onClickingDelete: PropTypes.func\n}\n\nexport default KegDetail;","import React from 'react';\nimport NewKegForm from './NewKegForm';\nimport TapList from './TapList';\nimport KegDetail from './KegDetail';\n\nconst tapControlStyles = {\n  position: 'relative',\n  top: '20vh',\n  width: '80vw',\n  height: 'auto',\n  marginTop: '2vh',\n  marginLeft: '10vw',\n  marginRight: '10vw',\n  marginBottom: '10%'\n}\n\nclass TapControl extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formVisibleOnPage: false,\n      masterKegList: [],\n      selectedKeg: null\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.selectedKeg != null) {\n      this.setState({\n        formVisibleOnPage: false,\n        selectedKeg: null\n      });\n    } else {\n      this.setState(prevState => ({\n        formVisibleOnPage: !prevState.formVisibleOnPage\n      }));\n    }\n  }\n\n  handleAddingNewKegToList = (newKeg) => {\n    const newMasterKegList = this.state.masterKegList.concat(newKeg);\n    this.setState({\n      masterKegList: newMasterKegList,\n      formVisibleOnPage: false\n    });\n  }\n\n  handleChangingSelectedKeg = (id) => {\n    const selectedKeg = this.state.masterKegList.filter(keg => keg.id === id)[0];\n    this.setState({selectedKeg: selectedKeg});\n  }\n\n  handleKegPurchase = (id) => {\n    const kegToBePurchased = this.state.masterKegList.filter(keg => keg.id === id)[0];\n    const newPintQuantity = kegToBePurchased.pintQuantity - 1;\n    const updatedKeg = {...kegToBePurchased, pintQuantity: newPintQuantity};\n    const previousKegList = this.state.masterKegList.filter(keg => keg.id !== id);\n    this.setState({\n      masterKegList: [...previousKegList, updatedKeg],\n      selectedKeg: null\n    });\n  }\n\n  handleDeletingKeg = (id) => {\n    const newMasterKegList = this.state.masterKegList.filter(keg => keg.id !== id);\n    this.setState({\n      masterKegList: newMasterKegList,\n      selectedKeg: null\n    });\n  }\n\n  render(){\n    let currentlyVisibleState = null;\n    let buttonText = null;\n\n    if (this.state.selectedKeg != null) {\n      currentlyVisibleState = <KegDetail \n        keg={this.state.selectedKeg}\n        onClickingDelete = {this.handleDeletingKeg} />\n      buttonText = \"RETURN TO TAP LIST\";\n    } else if (this.state.formVisibleOnPage) {\n      currentlyVisibleState = <NewKegForm \n        onNewKegCreation={this.handleAddingNewKegToList} />\n      buttonText = \"RETURN TO TAP LIST\";\n    } else {\n      currentlyVisibleState = <TapList \n        tapList={this.state.masterKegList}\n        onKegSelection={this.handleChangingSelectedKeg}\n        onClickingBuy={this.handleKegPurchase} />\n      buttonText = \"+ NEW KEG\";\n    }\n\n    return(\n      <React.Fragment>\n        <div style={tapControlStyles}>\n          <button className=\"reused-button\" onClick={this.handleClick}>{buttonText}</button>\n          {currentlyVisibleState}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TapControl;","import React from 'react';\n\nfunction Footer(){\n  const footerStyles = {\n    position: 'fixed',\n    bottom: '0',\n    left: '0',\n    width: '100vw',\n    backgroundColor: 'rgb(198,229,214)',\n    borderTop: '2px solid #388087',\n    color: '#388087',\n    padding: '0.5%',\n    paddingLeft: '2%'\n  }\n\n  return(\n    <div style={footerStyles}>\n      <p>&copy; 2020 - Michelle Morin</p>\n    </div>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './Header.js';\nimport TapControl from './TapControl.js';\nimport Footer from './Footer.js';\n\nfunction App() {\n  const appStyles = {\n    fontFamily: \"'Montserrat', sans-serif\"\n  }\n\n  return (\n    <React.Fragment>\n      <div style={appStyles}>\n        <Header />\n        <TapControl />\n        <Footer />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/beer.b3792d9b.jpg\";"],"sourceRoot":""}